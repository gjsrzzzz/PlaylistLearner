@page "/"
@using PlaylistLearner.Components
@inject IJSRuntime JsRuntime
@inject PlaylistService PlaylistService

<PageTitle>@Playlist.Name</PageTitle>

<h1 style="font-size: 32pt">@Playlist.Name</h1>
@if (!string.IsNullOrEmpty(Playlist.Link))
{
    <p><a target="_blank" href="@Playlist.Link">@Playlist.LinkText</a> </p>
}
<div class="p-0 m-0">
    <CascadingValue Value="@ShowVideos">
    <CascadingValue Value="@this">
        @foreach (var item in Playlist.Items)
        {
            <ItemCard Item="@item"/>
        }
    </CascadingValue>
    </CascadingValue>
</div>

@code
{
    private HashSet<string> ShowVideos { get; } = new();
    public int Height { get; set; }
    public int Width { get; set; }
    public Playlist Playlist => Playlist.Academia2005;

    protected override async Task OnInitializedAsync()
    {
        var dimension = await JsRuntime.InvokeAsync<WindowDimension>("getDimensions");
        Height = dimension.Height;
        Width = dimension.Width;
        var pl=PlaylistService.GetPlaylist();
        await base.OnInitializedAsync();
    }


    public void RefreshState(){
        this.StateHasChanged();
    }

    public class WindowDimension
    {
        public int Width { get; set; }
        public int Height { get; set; }
    }
}
